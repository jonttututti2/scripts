-- LocalScript
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ActiveCharactersGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- Create main draggable frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 260, 0, 320)
mainFrame.Position = UDim2.new(0, 50, 0, 150)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

-- Title bar
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
title.Text = "Active Characters"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 20
title.Parent = mainFrame

-- Create a scrolling frame to list bools
local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Size = UDim2.new(1, -10, 1, -40)
scrollingFrame.Position = UDim2.new(0, 5, 0, 35)
scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollingFrame.ScrollBarThickness = 8
scrollingFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
scrollingFrame.BackgroundTransparency = 0.1
scrollingFrame.Parent = mainFrame

-- Helper: create a label
local function createLabel(text, yPos)
	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, -10, 0, 24)
	label.Position = UDim2.new(0, 5, 0, yPos)
	label.BackgroundTransparency = 1
	label.TextColor3 = Color3.fromRGB(255, 255, 255)
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Font = Enum.Font.SourceSans
	label.TextSize = 20
	label.Text = text
	label.Parent = scrollingFrame
end

-- Function to refresh GUI
local function updateList()
	-- Clear old text
	for _, child in ipairs(scrollingFrame:GetChildren()) do
		if child:IsA("TextLabel") then
			child:Destroy()
		end
	end

	local folder = workspace:FindFirstChild("FolderActiveCharacters")
	if not folder then
		warn("⚠️ FolderActiveCharacters not found in workspace!")
		return
	end

	local y = 0
	for _, item in ipairs(folder:GetChildren()) do
		if item:IsA("BoolValue") and item.Value == true then
			createLabel(item.Name, y)
			y += 26
		end
	end
	scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, y)
end

-- Refresh every 10 seconds
task.spawn(function()
	while true do
		updateList()
		task.wait(10)
	end
end)

-- Instant updates on change
local function connectListeners()
	local folder = workspace:WaitForChild("FolderActiveCharacters")
	folder.ChildAdded:Connect(function(child)
		if child:IsA("BoolValue") then
			child.Changed:Connect(updateList)
			updateList()
		end
	end)
	folder.ChildRemoved:Connect(updateList)
	for _, bool in ipairs(folder:GetChildren()) do
		if bool:IsA("BoolValue") then
			bool.Changed:Connect(updateList)
		end
	end
end

connectListeners()
updateList()

-- LocalScript
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- === GUI CREATION ===
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "NameTagManagerGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 220, 0, 70)
mainFrame.Position = UDim2.new(0, 50, 0, 250)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 25)
title.BackgroundTransparency = 1
title.Text = "ESP"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 18
title.Parent = mainFrame

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 130, 0, 30)
toggleButton.Position = UDim2.new(0.5, -65, 1, -35)
toggleButton.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
toggleButton.Text = "OFF"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 18
toggleButton.Parent = mainFrame

-- === VARIABLES ===
local toggled = false
local updateLoop = nil

-- === FUNCTIONS FOR NAMETAGS ===
local function setNameTagsEnabled(state)
	local folder = workspace:FindFirstChild("FolderNameTags")
	if not folder then return end
	for _, obj in ipairs(folder:GetChildren()) do
		if obj:IsA("BillboardGui") or obj:IsA("SurfaceGui") then
			obj.Enabled = state
		elseif obj:IsA("Folder") then
			for _, gui in ipairs(obj:GetChildren()) do
				if gui:IsA("BillboardGui") or gui:IsA("SurfaceGui") then
					gui.Enabled = state
				end
			end
		end
	end
end

-- === FUNCTIONS FOR ACTIVECHARACTER HIGHLIGHTS ===
local function clearHighlights()
	for _, obj in ipairs(workspace:GetChildren()) do
		if obj:IsA("Model") or obj:IsA("Part") then
			local hl = obj:FindFirstChild("ActiveHighlight")
			if hl then hl:Destroy() end
		end
	end
end

local function updateHighlights()
	local folder = workspace:FindFirstChild("FolderActiveCharacters")
	if not folder then return end
	for _, boolVal in ipairs(folder:GetChildren()) do
		if boolVal:IsA("BoolValue") and boolVal.Value == true then
			local model = workspace:FindFirstChild(boolVal.Name)
			if model and not model:FindFirstChild("ActiveHighlight") then
				local hl = Instance.new("Highlight")
				hl.Name = "ActiveHighlight"
				hl.FillColor = Color3.fromRGB(255, 0, 0)
				hl.OutlineColor = Color3.fromRGB(255, 255, 255)
				hl.FillTransparency = 0.9
				hl.OutlineTransparency = 0.1
				hl.Parent = model
			end
		end
	end
end

-- === MASTER UPDATE LOOP ===
local function performUpdate()
	if toggled then
		setNameTagsEnabled(true)
		clearHighlights()
		updateHighlights()
	else
		setNameTagsEnabled(false)
		clearHighlights()
	end
end

-- === TOGGLE SWITCH ===
local function toggleSwitch()
	toggled = not toggled

	if toggled then
		toggleButton.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
		toggleButton.Text = "ON"

		performUpdate()

		updateLoop = task.spawn(function()
			while toggled do
				performUpdate()
				task.wait(10) -- recheck every 10 seconds
			end
		end)
	else
		toggleButton.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
		toggleButton.Text = "OFF"
		performUpdate() -- disable tags and highlights
	end
end

toggleButton.MouseButton1Click:Connect(toggleSwitch)

-- LocalScript

local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- === GUI CREATION ===
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ItemHighlightGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 180, 0, 60)
mainFrame.Position = UDim2.new(0, 300, 0, 200)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 25)
title.BackgroundTransparency = 1
title.Text = "Item ESP"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 18
title.Parent = mainFrame

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 120, 0, 25)
toggleButton.Position = UDim2.new(0.5, -60, 1, -30)
toggleButton.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
toggleButton.Text = "OFF"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 18
toggleButton.Parent = mainFrame

-- === VARIABLES ===
local toggled = false
local highlightLoop = nil

-- === COLOR MAP ===
local itemColors = {
	ItemCoin = Color3.fromRGB(255, 255, 0),         -- Yellow
	ItemNachos = Color3.fromRGB(255, 170, 0),       -- Orange
	ItemPartyCupcake = Color3.fromRGB(255, 105, 180), -- Pink
	Freddle1 = Color3.fromRGB(255, 0, 255),        -- Cyan
	Freddle2 = Color3.fromRGB(255, 0, 255),        -- Magenta
	Freddle3 = Color3.fromRGB(255, 0, 255)         -- White
}

-- === HELPER FUNCTIONS ===
local function addHighlightTo(item, color)
	if not item or not item:IsDescendantOf(workspace) then return end
	if not item:FindFirstChild("ItemHighlight") then
		local hl = Instance.new("Highlight")
		hl.Name = "ItemHighlight"
		hl.FillColor = color
		hl.OutlineColor = color
		hl.FillTransparency = 0.6
		hl.OutlineTransparency = 0.9
		hl.Parent = item
	end
end

local function removeHighlights()
	for _, obj in ipairs(workspace:GetChildren()) do
		if obj:IsA("Model") or obj:IsA("Part") then
			local hl = obj:FindFirstChild("ItemHighlight")
			if hl then
				hl:Destroy()
			end
		end
	end
end

local function checkSpecificItems()
	for itemName, color in pairs(itemColors) do
		local item = workspace:FindFirstChild(itemName)
		if item then
			addHighlightTo(item, color)
		end
	end
end

-- === TOGGLE FUNCTION ===
local function toggleSwitch()
	toggled = not toggled

	if toggled then
		toggleButton.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
		toggleButton.Text = "ON"

		highlightLoop = task.spawn(function()
			while toggled do
				checkSpecificItems()
				task.wait(2) -- recheck every 2 seconds
			end
		end)
	else
		toggleButton.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
		toggleButton.Text = "OFF"
		removeHighlights()
	end
end

toggleButton.MouseButton1Click:Connect(toggleSwitch)

-- LocalScript

local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- === GUI CREATION ===
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AutoClickGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 180, 0, 60)
mainFrame.Position = UDim2.new(0, 500, 0, 200)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 25)
title.BackgroundTransparency = 1
title.Text = "Auto Click Items(wip)"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 18
title.Parent = mainFrame

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 120, 0, 25)
toggleButton.Position = UDim2.new(0.5, -60, 1, -30)
toggleButton.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
toggleButton.Text = "OFF"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 18
toggleButton.Parent = mainFrame

-- === VARIABLES ===
local toggled = false
local clickLoop = nil

-- === ITEM NAMES TO SEARCH ===
local itemNames = {"ItemPartyCupcake", "ItemNachos", "ItemCoin"}

-- === HELPER FUNCTIONS ===
local function clickItems()
	for _, itemName in ipairs(itemNames) do
		local item = workspace:FindFirstChild(itemName)
		if item then
			for _, descendant in ipairs(item:GetDescendants()) do
				if descendant:IsA("ClickDetector") then
					fireclickdetector(descendant)
				end
			end
		end
	end
end

local function toggleSwitch()
	toggled = not toggled

	if toggled then
		toggleButton.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
		toggleButton.Text = "ON"

		clickLoop = task.spawn(function()
			while toggled do
				clickItems()
				task.wait(1.5) -- tries every 1.5 seconds
			end
		end)
	else
		toggleButton.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
		toggleButton.Text = "OFF"
	end
end

toggleButton.MouseButton1Click:Connect(toggleSwitch)
